<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">$(MSBuildProjectDirectory)\..\</SolutionDir>

    <ProtoCPath>$(ProjectDir)\.protoc\protoc.exe</ProtoCPath>

    <!-- Download ProtoC.exe if it does not already exist -->
    <DownloadProtoCExe Condition=" '$(DownloadProtoCExe)' == '' ">true</DownloadProtoCExe>
  </PropertyGroup>

  <ItemGroup>
    
  </ItemGroup>

  <PropertyGroup>
    <BuildDependsOn>
      _CopyProtoC;
      $(BuildDependsOn);
    </BuildDependsOn>
  </PropertyGroup>

  <Target Name="_CopyProtoC" DependsOnTargets="_DownloadProtoC">
    <Message Text="Coping protoc.exe to the output dir." Importance="normal"/>
    <Copy SourceFiles="$(ProtoCPath)" DestinationFolder="$(TargetDir)" SkipUnchangedFiles="true"/>
  </Target>

  <Target Name="_DownloadProtoC" Condition=" '$(DownloadProtoCExe)' == 'true' AND !Exists('$(ProtoCPath)')">
    <Message Text="Downloading protoc.exe from github..." Importance="high"/>
    <DownloadProtoC OutputFilename="$(ProtoCPath)" />
  </Target>

  <UsingTask TaskName="DownloadProtoC" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
    <ParameterGroup>
      <OutputFilename ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Reference Include="System.Core" />
      <Reference Include="System.IO.Compression" />
      <Reference Include="System.IO.Compression.FileSystem" />
      <Using Namespace="System" />
      <Using Namespace="System.IO" />
      <Using Namespace="System.Net" />
      <Using Namespace="Microsoft.Build.Framework" />
      <Using Namespace="Microsoft.Build.Utilities" />
      <Using Namespace="System.IO.Compression" />

      <Code Type="Fragment" Language="cs">
        <![CDATA[
                try {
                    var directory = Path.GetDirectoryName(Path.GetFullPath(OutputFilename));
                    var downloadingArchive = Path.Combine(directory, "protoc.zip");

                    Log.LogMessage("Downloading latest version of ProtoC.exe...");
                    WebClient webClient = new WebClient();
                    webClient.DownloadFile("https://github.com/google/protobuf/releases/download/v2.6.1/protoc-2.6.1-win32.zip", downloadingArchive);
                    
                    //Unzip all files with overwriting exists
                    using (ZipArchive archive = ZipFile.Open(downloadingArchive, ZipArchiveMode.Read))
                    {
                        foreach (var zipArchiveEntry in archive.Entries)
                        {
                            var filePath = Path.Combine(directory, zipArchiveEntry.FullName);
                            zipArchiveEntry.ExtractToFile(filePath, overwrite: true);
                        }
                    }
                    
                    File.Delete(downloadingArchive);
                    
                    return true;
                }
                catch (Exception ex) {
                    Log.LogErrorFromException(ex);
                    return false;
                }
            ]]>
      </Code>
    </Task>
  </UsingTask>
</Project>
